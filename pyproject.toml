[project]
name = "lazyscribe"
requires-python = ">=3.9.0"
description = "Lightweight and lazy experiment logging"
authors = [
    {name = "Akshay Gupta", email="akgcodes@gmail.com"}
]
license = {text = "MIT license"}
classifiers = [
	"Development Status :: 4 - Beta",
	"License :: OSI Approved :: MIT License",
	"Natural Language :: English",
	"Programming Language :: Python :: 3",
	"Programming Language :: Python :: 3 :: Only",
	"Programming Language :: Python :: 3.9",
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
	"Programming Language :: Python :: 3.13",
]
dependencies = ["attrs<=25.1.0,>=21.2.0", "importlib-metadata<=8.5.0,>=6.0", "python-slugify<=8.0.4,>=5.0.0", "fsspec<=2024.12.0,>=0.4.0"]

dynamic = ["readme", "version"]

[project.optional-dependencies]
build = ["build", "bumpver", "twine", "wheel"]
docs = ["furo", "matplotlib", "pandas", "pillow", "prefect<2,>=1.0", "scikit-learn", "sphinx", "sphinx-gallery", "sphinx-inline-tabs"]
qa = ["ruff==0.7.3", "edgetest", "mypy", "pip-tools", "types-python-slugify", "types-PyYAML"]
tests = ["scikit-learn", "prefect<2,>=1.0", "pytest", "pytest-cov", "time-machine", "PyYAML"]
dev = ["lazyscribe[build]", "lazyscribe[docs]", "lazyscribe[qa]", "lazyscribe[tests]"]

[project.urls]
documentation = "https://lazyscribe.github.io/lazyscribe/"
repository = "https://github.com/lazyscribe/lazyscribe"

# Build system
[build-system]
requires = ["setuptools>=64.0.0"]
build-backend = "setuptools.build_meta"

[project.entry-points."lazyscribe.artifact_type"]
base = "lazyscribe.artifacts.base:Artifact"
joblib = "lazyscribe.artifacts.joblib:JoblibArtifact"
json = "lazyscribe.artifacts.json:JSONArtifact"
yaml = "lazyscribe.artifacts.yaml:YAMLArtifact"

##############################################################################
# Setuptools configuration
##############################################################################

[tool.setuptools]
include-package-data = true
zip-safe = false
packages = ["lazyscribe", "lazyscribe.prefect", "lazyscribe.artifacts"]

[tool.setuptools.dynamic]
version = {attr = "lazyscribe._meta.__version__"}
readme = {file = ["README.md"], content-type = "text/markdown"}

##############################################################################
# Tooling
##############################################################################

# BUMPVER --------------------------------------------------------------------

[bumpver]
current_version = "0.7.0"
version_pattern = "MAJOR.MINOR.PATCH"

[bumpver.file_patterns]
"pyproject.toml" = [
	'current_version = "{version}"',
]
"lazyscribe/_meta.py" = [
	'__version__ = "{version}"',
]
"docs/conf.py" = [
	'version = "{version}"',
]

# EDGETEST -------------------------------------------------------------------

[edgetest.envs.core]
python_version = "3.9"
extras = ["tests"]
upgrade = ["attrs", "python-slugify", "fsspec"]
command = "pytest tests"

# RUFF -----------------------------------------------------------------------

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
preview = true
select = [
	"E",  # pycodestyle errors
	"W",  # pycodestyle warnings
	"F",  # pyflakes
	"D",  # pydocstyle
	"I",  # isort
	"UP",  # pyupgrade
	"B",  # flake8-bugbear
	"C",  # flake8-comprehensions
	"T20",  # flake8-print
	"TID252",  # flake8-tidy-imports ban relative imports
	"SIM",  # flake8-simplify
	"LOG",  # flake8-logging
	"RUF",  # Ruff errors
]
ignore = [
	"C901",  # Function/method is too complex. (Add back in later.)
	"E501",  # Line too long. Using formatter instead.
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs}/*" = ["E402", "D", "F841", "ARG"]
"tutorials/*" = ["D", "T201"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

# MYPY -----------------------------------------------------------------------

[tool.mypy]
python_version = 3.9
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true
